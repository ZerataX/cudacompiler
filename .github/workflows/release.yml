name: release

on:
  push:
    branches:
      - 'release-workflow'
    tags:
      - 'v*'

env:
  RELEASE_VERSION: ${GITHUB_REF##*/}

jobs:
  build:
    env:
      RELEASE_VERSION: ${GITHUB_REF##*/}
    runs-on: ubuntu-latest
    container: nvidia/cuda:latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Build project
        run: |
          - echo 'creating library for ${{ RELEASE_VERSION }}'
          - cmake -H. -Bbuild
          - make -C build yacx
          - make -C build yacx-jni
          - pushd build
          - tar -cJf yacx-${{ RELEASE_VERSION }}_unix.tar.xz libyacx.so libyacx-jni.so java/bin/yacx
          - popd
      - name: Upload library
        uses: actions/upload-artifact@v1
        with:
          name: yacx-${{ RELEASE_VERSION }}_unix.tar.xz
          path: build/yacx-${{ RELEASE_VERSION }}_unix.tar.xz
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download library
      uses: actions/download-artifact@v1
      with:
        name: yacx-${{ RELEASE_VERSION }}_unix.tar.xz
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: $RELEASE_VERSION
        draft: true
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/yacx-${{ RELEASE_VERSION }}_unix.tar.xz
        asset_name: yacx-${{ RELEASE_VERSION }}_unix.tar.xz
        asset_content_type: application/zip
