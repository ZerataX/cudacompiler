/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class KernelArg */

#ifndef _Included_KernelArg
#define _Included_KernelArg
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     KernelArg
 * Method:    create
 * Signature: (F)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create__F
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: (I)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: (D)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: (Z)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create__Z
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: ([FZ)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create___3FZ
  (JNIEnv *, jclass, jfloatArray, jboolean);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: ([IZ)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create___3IZ
  (JNIEnv *, jclass, jintArray, jboolean);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: ([DZ)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create___3DZ
  (JNIEnv *, jclass, jdoubleArray, jboolean);

/*
 * Class:     KernelArg
 * Method:    create
 * Signature: ([ZZ)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_create___3ZZ
  (JNIEnv *, jclass, jbooleanArray, jboolean);

/*
 * Class:     KernelArg
 * Method:    createOutput
 * Signature: (J)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_KernelArg_createOutput
  (JNIEnv *, jclass, jlong);

/*
 * Class:     KernelArg
 * Method:    asFloatArray
 * Signature: ()[F
 */
JNIEXPORT jfloatArray JNICALL Java_KernelArg_asFloatArray
  (JNIEnv *, jobject);

/*
 * Class:     KernelArg
 * Method:    asIntArray
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_KernelArg_asIntArray
  (JNIEnv *, jobject);

/*
 * Class:     KernelArg
 * Method:    asDoubleArray
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_KernelArg_asDoubleArray
  (JNIEnv *, jobject);

/*
 * Class:     KernelArg
 * Method:    asBooleanArray
 * Signature: ()[Z
 */
JNIEXPORT jbooleanArray JNICALL Java_KernelArg_asBooleanArray
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
